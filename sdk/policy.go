package dnac

import (
	"fmt"
	"strings"

	"github.com/go-resty/resty/v2"
	"github.com/google/go-querystring/query"
)

type PolicyService service

type GetListOfProfilingRulesQueryParams struct {
	RuleType       string  `url:"ruleType,omitempty"`       //Use comma-separated list of rule types to filter the data. Defaults to 'Custom Rule'.
	IncludeDeleted bool    `url:"includeDeleted,omitempty"` //Flag to indicate whether deleted rules should be part of the records fetched.
	Limit          float64 `url:"limit,omitempty"`          //Maximum number of records to be fetched. If not provided, 500 records will be fetched by default. To fetch all the records in the system, provide a large value for this parameter.
	Offset         float64 `url:"offset,omitempty"`         //Record offset to start data fetch at. Offset starts at zero.
	SortBy         string  `url:"sortBy,omitempty"`         //Name of the column to sort the results on. Please note that fetch might take more time if sorting is requested.
	Order          string  `url:"order,omitempty"`          //Order to be used for sorting.
}
type GetCountOfProfilingRulesQueryParams struct {
	RuleType       string `url:"ruleType,omitempty"`       //Use comma-separated list of rule types to filter the data. Defaults to 'Custom Rule'.
	IncludeDeleted bool   `url:"includeDeleted,omitempty"` //Flag to indicate whether deleted rules should be part of the records fetched.
}

type ResponsePolicyCreateAProfilingRule struct {
	ID   string `json:"id,omitempty"`   // Unique identifier for the newly created resource.
	Link string `json:"link,omitempty"` // Link to the newly created resource.
}
type ResponsePolicyGetListOfProfilingRules struct {
	ProfilingRules *[]ResponsePolicyGetListOfProfilingRulesProfilingRules `json:"profilingRules,omitempty"` //
}
type ResponsePolicyGetListOfProfilingRulesProfilingRules struct {
	RuleID          string                                                              `json:"ruleId,omitempty"`          // Unique identifier for the rule. This is normally generated by the system, and client does not need to provide it for rules that need to be newly created.
	RuleName        string                                                              `json:"ruleName,omitempty"`        // Human readable name for the rule.
	RuleType        string                                                              `json:"ruleType,omitempty"`        // Type of the rule.
	RuleVersion     *int                                                                `json:"ruleVersion,omitempty"`     // Version of the rule.
	RulePriority    *int                                                                `json:"rulePriority,omitempty"`    // Priority for the rule.
	SourcePriority  *int                                                                `json:"sourcePriority,omitempty"`  // Source priority for the rule.
	IsDeleted       *bool                                                               `json:"isDeleted,omitempty"`       // Flag to indicate whether the rule was deleted.
	LastModifiedBy  string                                                              `json:"lastModifiedBy,omitempty"`  // User that last modified the rule. It is read-only, and is ignored if provided as part of input request.
	LastModifiedOn  *int                                                                `json:"lastModifiedOn,omitempty"`  // Timestamp (in epoch milliseconds) of last modification. It is read-only, and is ignored if provided as part of input request.
	PluginID        string                                                              `json:"pluginId,omitempty"`        // Plugin for the rule. Only applicable for 'Cisco Default' rules.
	ClusterID       string                                                              `json:"clusterId,omitempty"`       // Unique identifier for ML cluster. Only applicable for 'ML Rule'.
	Rejected        *bool                                                               `json:"rejected,omitempty"`        // Flag to indicate whether rule has been rejected by user or not. Only applicable for 'ML Rule'.
	Result          *ResponsePolicyGetListOfProfilingRulesProfilingRulesResult          `json:"result,omitempty"`          //
	ConditionGroups *ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroups `json:"conditionGroups,omitempty"` //
	UsedAttributes  []string                                                            `json:"usedAttributes,omitempty"`  // List of attributes used in the rule. Only applicable for 'Cisco Default' rules.
}
type ResponsePolicyGetListOfProfilingRulesProfilingRulesResult struct {
	DeviceType           []string `json:"deviceType,omitempty"`           // List of device types determined by the current rule.
	HardwareManufacturer []string `json:"hardwareManufacturer,omitempty"` // List of hardware manufacturers determined by the current rule.
	HardwareModel        []string `json:"hardwareModel,omitempty"`        // List of hardware models determined by the current rule.
	OperatingSystem      []string `json:"operatingSystem,omitempty"`      // List of operating systems determined by the current rule.
}
type ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroups struct {
	Type           string                                                                              `json:"type,omitempty"`           //
	Condition      *ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroupsCondition        `json:"condition,omitempty"`      //
	Operator       string                                                                              `json:"operator,omitempty"`       //
	ConditionGroup *[]ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroupsConditionGroup `json:"conditionGroup,omitempty"` //
}
type ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroupsCondition struct {
	Attribute           string `json:"attribute,omitempty"`           //
	Operator            string `json:"operator,omitempty"`            //
	Value               string `json:"value,omitempty"`               //
	AttributeDictionary string `json:"attributeDictionary,omitempty"` //
}
type ResponsePolicyGetListOfProfilingRulesProfilingRulesConditionGroupsConditionGroup interface{}
type ResponsePolicyGetCountOfProfilingRules struct {
	Count *int `json:"count,omitempty"` //
}
type ResponsePolicyGetDetailsOfASingleProfilingRule struct {
	RuleID          string                                                         `json:"ruleId,omitempty"`          // Unique identifier for the rule. This is normally generated by the system, and client does not need to provide it for rules that need to be newly created.
	RuleName        string                                                         `json:"ruleName,omitempty"`        // Human readable name for the rule.
	RuleType        string                                                         `json:"ruleType,omitempty"`        // Type of the rule.
	RuleVersion     *int                                                           `json:"ruleVersion,omitempty"`     // Version of the rule.
	RulePriority    *int                                                           `json:"rulePriority,omitempty"`    // Priority for the rule.
	SourcePriority  *int                                                           `json:"sourcePriority,omitempty"`  // Source priority for the rule.
	IsDeleted       *bool                                                          `json:"isDeleted,omitempty"`       // Flag to indicate whether the rule was deleted.
	LastModifiedBy  string                                                         `json:"lastModifiedBy,omitempty"`  // User that last modified the rule. It is read-only, and is ignored if provided as part of input request.
	LastModifiedOn  *int                                                           `json:"lastModifiedOn,omitempty"`  // Timestamp (in epoch milliseconds) of last modification. It is read-only, and is ignored if provided as part of input request.
	PluginID        string                                                         `json:"pluginId,omitempty"`        // Plugin for the rule. Only applicable for 'Cisco Default' rules.
	ClusterID       string                                                         `json:"clusterId,omitempty"`       // Unique identifier for ML cluster. Only applicable for 'ML Rule'.
	Rejected        *bool                                                          `json:"rejected,omitempty"`        // Flag to indicate whether rule has been rejected by user or not. Only applicable for 'ML Rule'.
	Result          *ResponsePolicyGetDetailsOfASingleProfilingRuleResult          `json:"result,omitempty"`          //
	ConditionGroups *ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroups `json:"conditionGroups,omitempty"` //
	UsedAttributes  []string                                                       `json:"usedAttributes,omitempty"`  // List of attributes used in the rule. Only applicable for 'Cisco Default' rules.
}
type ResponsePolicyGetDetailsOfASingleProfilingRuleResult struct {
	DeviceType           []string `json:"deviceType,omitempty"`           // List of device types determined by the current rule.
	HardwareManufacturer []string `json:"hardwareManufacturer,omitempty"` // List of hardware manufacturers determined by the current rule.
	HardwareModel        []string `json:"hardwareModel,omitempty"`        // List of hardware models determined by the current rule.
	OperatingSystem      []string `json:"operatingSystem,omitempty"`      // List of operating systems determined by the current rule.
}
type ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroups struct {
	Type           string                                                                         `json:"type,omitempty"`           //
	Condition      *ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroupsCondition        `json:"condition,omitempty"`      //
	Operator       string                                                                         `json:"operator,omitempty"`       //
	ConditionGroup *[]ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroupsConditionGroup `json:"conditionGroup,omitempty"` //
}
type ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroupsCondition struct {
	Attribute           string `json:"attribute,omitempty"`           //
	Operator            string `json:"operator,omitempty"`            //
	Value               string `json:"value,omitempty"`               //
	AttributeDictionary string `json:"attributeDictionary,omitempty"` //
}
type ResponsePolicyGetDetailsOfASingleProfilingRuleConditionGroupsConditionGroup interface{}
type RequestPolicyCreateAProfilingRule struct {
	RuleID          string                                            `json:"ruleId,omitempty"`          // Unique identifier for the rule. This is normally generated by the system, and client does not need to provide it for rules that need to be newly created.
	RuleName        string                                            `json:"ruleName,omitempty"`        // Human readable name for the rule.
	RuleType        string                                            `json:"ruleType,omitempty"`        // Type of the rule.
	RuleVersion     *int                                              `json:"ruleVersion,omitempty"`     // Version of the rule.
	RulePriority    *int                                              `json:"rulePriority,omitempty"`    // Priority for the rule.
	SourcePriority  *int                                              `json:"sourcePriority,omitempty"`  // Source priority for the rule.
	IsDeleted       *bool                                             `json:"isDeleted,omitempty"`       // Flag to indicate whether the rule was deleted.
	LastModifiedBy  string                                            `json:"lastModifiedBy,omitempty"`  // User that last modified the rule. It is read-only, and is ignored if provided as part of input request.
	LastModifiedOn  *int                                              `json:"lastModifiedOn,omitempty"`  // Timestamp (in epoch milliseconds) of last modification. It is read-only, and is ignored if provided as part of input request.
	PluginID        string                                            `json:"pluginId,omitempty"`        // Plugin for the rule. Only applicable for 'Cisco Default' rules.
	ClusterID       string                                            `json:"clusterId,omitempty"`       // Unique identifier for ML cluster. Only applicable for 'ML Rule'.
	Rejected        *bool                                             `json:"rejected,omitempty"`        // Flag to indicate whether rule has been rejected by user or not. Only applicable for 'ML Rule'.
	Result          *RequestPolicyCreateAProfilingRuleResult          `json:"result,omitempty"`          //
	ConditionGroups *RequestPolicyCreateAProfilingRuleConditionGroups `json:"conditionGroups,omitempty"` //
	UsedAttributes  []string                                          `json:"usedAttributes,omitempty"`  // List of attributes used in the rule. Only applicable for 'Cisco Default' rules.
}
type RequestPolicyCreateAProfilingRuleResult struct {
	DeviceType           []string `json:"deviceType,omitempty"`           // List of device types determined by the current rule.
	HardwareManufacturer []string `json:"hardwareManufacturer,omitempty"` // List of hardware manufacturers determined by the current rule.
	HardwareModel        []string `json:"hardwareModel,omitempty"`        // List of hardware models determined by the current rule.
	OperatingSystem      []string `json:"operatingSystem,omitempty"`      // List of operating systems determined by the current rule.
}
type RequestPolicyCreateAProfilingRuleConditionGroups struct {
	Type           string                                                            `json:"type,omitempty"`           //
	Condition      *RequestPolicyCreateAProfilingRuleConditionGroupsCondition        `json:"condition,omitempty"`      //
	Operator       string                                                            `json:"operator,omitempty"`       //
	ConditionGroup *[]RequestPolicyCreateAProfilingRuleConditionGroupsConditionGroup `json:"conditionGroup,omitempty"` //
}
type RequestPolicyCreateAProfilingRuleConditionGroupsCondition struct {
	Attribute           string `json:"attribute,omitempty"`           //
	Operator            string `json:"operator,omitempty"`            //
	Value               string `json:"value,omitempty"`               //
	AttributeDictionary string `json:"attributeDictionary,omitempty"` //
}
type RequestPolicyCreateAProfilingRuleConditionGroupsConditionGroup interface{}
type RequestPolicyImportProfilingRulesInBulk struct {
	ProfilingRules *[]RequestPolicyImportProfilingRulesInBulkProfilingRules `json:"profilingRules,omitempty"` //
}
type RequestPolicyImportProfilingRulesInBulkProfilingRules struct {
	RuleID          string                                                                `json:"ruleId,omitempty"`          // Unique identifier for the rule. This is normally generated by the system, and client does not need to provide it for rules that need to be newly created.
	RuleName        string                                                                `json:"ruleName,omitempty"`        // Human readable name for the rule.
	RuleType        string                                                                `json:"ruleType,omitempty"`        // Type of the rule.
	RuleVersion     *int                                                                  `json:"ruleVersion,omitempty"`     // Version of the rule.
	RulePriority    *int                                                                  `json:"rulePriority,omitempty"`    // Priority for the rule.
	SourcePriority  *int                                                                  `json:"sourcePriority,omitempty"`  // Source priority for the rule.
	IsDeleted       *bool                                                                 `json:"isDeleted,omitempty"`       // Flag to indicate whether the rule was deleted.
	LastModifiedBy  string                                                                `json:"lastModifiedBy,omitempty"`  // User that last modified the rule. It is read-only, and is ignored if provided as part of input request.
	LastModifiedOn  *int                                                                  `json:"lastModifiedOn,omitempty"`  // Timestamp (in epoch milliseconds) of last modification. It is read-only, and is ignored if provided as part of input request.
	PluginID        string                                                                `json:"pluginId,omitempty"`        // Plugin for the rule. Only applicable for 'Cisco Default' rules.
	ClusterID       string                                                                `json:"clusterId,omitempty"`       // Unique identifier for ML cluster. Only applicable for 'ML Rule'.
	Rejected        *bool                                                                 `json:"rejected,omitempty"`        // Flag to indicate whether rule has been rejected by user or not. Only applicable for 'ML Rule'.
	Result          *RequestPolicyImportProfilingRulesInBulkProfilingRulesResult          `json:"result,omitempty"`          //
	ConditionGroups *RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroups `json:"conditionGroups,omitempty"` //
	UsedAttributes  []string                                                              `json:"usedAttributes,omitempty"`  // List of attributes used in the rule. Only applicable for 'Cisco Default' rules.
}
type RequestPolicyImportProfilingRulesInBulkProfilingRulesResult struct {
	DeviceType           []string `json:"deviceType,omitempty"`           // List of device types determined by the current rule.
	HardwareManufacturer []string `json:"hardwareManufacturer,omitempty"` // List of hardware manufacturers determined by the current rule.
	HardwareModel        []string `json:"hardwareModel,omitempty"`        // List of hardware models determined by the current rule.
	OperatingSystem      []string `json:"operatingSystem,omitempty"`      // List of operating systems determined by the current rule.
}
type RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroups struct {
	Type           string                                                                                `json:"type,omitempty"`           //
	Condition      *RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroupsCondition        `json:"condition,omitempty"`      //
	Operator       string                                                                                `json:"operator,omitempty"`       //
	ConditionGroup *[]RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroupsConditionGroup `json:"conditionGroup,omitempty"` //
}
type RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroupsCondition struct {
	Attribute           string `json:"attribute,omitempty"`           //
	Operator            string `json:"operator,omitempty"`            //
	Value               string `json:"value,omitempty"`               //
	AttributeDictionary string `json:"attributeDictionary,omitempty"` //
}
type RequestPolicyImportProfilingRulesInBulkProfilingRulesConditionGroupsConditionGroup interface{}
type RequestPolicyUpdateAnExistingProfilingRule struct {
	RuleID          string                                                     `json:"ruleId,omitempty"`          // Unique identifier for the rule. This is normally generated by the system, and client does not need to provide it for rules that need to be newly created.
	RuleName        string                                                     `json:"ruleName,omitempty"`        // Human readable name for the rule.
	RuleType        string                                                     `json:"ruleType,omitempty"`        // Type of the rule.
	RuleVersion     *int                                                       `json:"ruleVersion,omitempty"`     // Version of the rule.
	RulePriority    *int                                                       `json:"rulePriority,omitempty"`    // Priority for the rule.
	SourcePriority  *int                                                       `json:"sourcePriority,omitempty"`  // Source priority for the rule.
	IsDeleted       *bool                                                      `json:"isDeleted,omitempty"`       // Flag to indicate whether the rule was deleted.
	LastModifiedBy  string                                                     `json:"lastModifiedBy,omitempty"`  // User that last modified the rule. It is read-only, and is ignored if provided as part of input request.
	LastModifiedOn  *int                                                       `json:"lastModifiedOn,omitempty"`  // Timestamp (in epoch milliseconds) of last modification. It is read-only, and is ignored if provided as part of input request.
	PluginID        string                                                     `json:"pluginId,omitempty"`        // Plugin for the rule. Only applicable for 'Cisco Default' rules.
	ClusterID       string                                                     `json:"clusterId,omitempty"`       // Unique identifier for ML cluster. Only applicable for 'ML Rule'.
	Rejected        *bool                                                      `json:"rejected,omitempty"`        // Flag to indicate whether rule has been rejected by user or not. Only applicable for 'ML Rule'.
	Result          *RequestPolicyUpdateAnExistingProfilingRuleResult          `json:"result,omitempty"`          //
	ConditionGroups *RequestPolicyUpdateAnExistingProfilingRuleConditionGroups `json:"conditionGroups,omitempty"` //
	UsedAttributes  []string                                                   `json:"usedAttributes,omitempty"`  // List of attributes used in the rule. Only applicable for 'Cisco Default' rules.
}
type RequestPolicyUpdateAnExistingProfilingRuleResult struct {
	DeviceType           []string `json:"deviceType,omitempty"`           // List of device types determined by the current rule.
	HardwareManufacturer []string `json:"hardwareManufacturer,omitempty"` // List of hardware manufacturers determined by the current rule.
	HardwareModel        []string `json:"hardwareModel,omitempty"`        // List of hardware models determined by the current rule.
	OperatingSystem      []string `json:"operatingSystem,omitempty"`      // List of operating systems determined by the current rule.
}
type RequestPolicyUpdateAnExistingProfilingRuleConditionGroups struct {
	Type           string                                                                     `json:"type,omitempty"`           //
	Condition      *RequestPolicyUpdateAnExistingProfilingRuleConditionGroupsCondition        `json:"condition,omitempty"`      //
	Operator       string                                                                     `json:"operator,omitempty"`       //
	ConditionGroup *[]RequestPolicyUpdateAnExistingProfilingRuleConditionGroupsConditionGroup `json:"conditionGroup,omitempty"` //
}
type RequestPolicyUpdateAnExistingProfilingRuleConditionGroupsCondition struct {
	Attribute           string `json:"attribute,omitempty"`           //
	Operator            string `json:"operator,omitempty"`            //
	Value               string `json:"value,omitempty"`               //
	AttributeDictionary string `json:"attributeDictionary,omitempty"` //
}
type RequestPolicyUpdateAnExistingProfilingRuleConditionGroupsConditionGroup interface{}

//GetListOfProfilingRules Get list of profiling rules - 07b4-eb60-435a-bf90
/* This API fetches the list of profiling rules. It can be used to show profiling rules in client applications, or export those from an environment. 'POST /profiling-rules/bulk' API can be used to import such exported rules into another environment. If this API is used to export rules to be imported into another Cisco DNA Center system, then ensure that 'includeDeleted' parameter is 'true', so that deleted rules get synchronized correctly. Use query parameters to filter the data, as required. If no filter is provided, then it will include only rules of type 'Custom Rule' in the response. By default, the response is limited to 500 records. Use 'limit' parameter to fetch higher number of records, if required. 'GET /profiling-rules/count' API can be used to find out the total number of rules in the system.


@param GetListOfProfilingRulesQueryParams Filtering parameter
*/
func (s *PolicyService) GetListOfProfilingRules(GetListOfProfilingRulesQueryParams *GetListOfProfilingRulesQueryParams) (*ResponsePolicyGetListOfProfilingRules, *resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules"

	queryString, _ := query.Values(GetListOfProfilingRulesQueryParams)

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetQueryString(queryString.Encode()).SetResult(&ResponsePolicyGetListOfProfilingRules{}).
		SetError(&Error).
		Get(path)

	if err != nil {
		return nil, nil, err

	}

	if response.IsError() {
		return nil, response, fmt.Errorf("error with operation GetListOfProfilingRules")
	}

	result := response.Result().(*ResponsePolicyGetListOfProfilingRules)
	return result, response, err

}

//GetCountOfProfilingRules Get count of profiling rules - 4dad-ba2c-4968-b494
/* This API fetches the count of profiling rules based on the filter values provided in the query parameters. The filter parameters are same as that of 'GET /profiling-rules' API, excluding the pagination and sort parameters.


@param GetCountOfProfilingRulesQueryParams Filtering parameter
*/
func (s *PolicyService) GetCountOfProfilingRules(GetCountOfProfilingRulesQueryParams *GetCountOfProfilingRulesQueryParams) (*ResponsePolicyGetCountOfProfilingRules, *resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules/count"

	queryString, _ := query.Values(GetCountOfProfilingRulesQueryParams)

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetQueryString(queryString.Encode()).SetResult(&ResponsePolicyGetCountOfProfilingRules{}).
		SetError(&Error).
		Get(path)

	if err != nil {
		return nil, nil, err

	}

	if response.IsError() {
		return nil, response, fmt.Errorf("error with operation GetCountOfProfilingRules")
	}

	result := response.Result().(*ResponsePolicyGetCountOfProfilingRules)
	return result, response, err

}

//GetDetailsOfASingleProfilingRule Get details of a single profiling rule - 20bc-6a22-4a4b-bead
/* Fetches details of the profiling rule for the given 'ruleId'.


@param ruleID ruleId path parameter. Unique rule identifier

*/
func (s *PolicyService) GetDetailsOfASingleProfilingRule(ruleID string) (*ResponsePolicyGetDetailsOfASingleProfilingRule, *resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}"
	path = strings.Replace(path, "{ruleId}", fmt.Sprintf("%v", ruleID), -1)

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetResult(&ResponsePolicyGetDetailsOfASingleProfilingRule{}).
		SetError(&Error).
		Get(path)

	if err != nil {
		return nil, nil, err

	}

	if response.IsError() {
		return nil, response, fmt.Errorf("error with operation GetDetailsOfASingleProfilingRule")
	}

	result := response.Result().(*ResponsePolicyGetDetailsOfASingleProfilingRule)
	return result, response, err

}

//CreateAProfilingRule Create a profiling rule - 6cb9-98bb-47ea-90f6
/* Creates profiling rule from the request body.


 */
func (s *PolicyService) CreateAProfilingRule(requestPolicyCreateAProfilingRule *RequestPolicyCreateAProfilingRule) (*ResponsePolicyCreateAProfilingRule, *resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules"

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetBody(requestPolicyCreateAProfilingRule).
		SetResult(&ResponsePolicyCreateAProfilingRule{}).
		SetError(&Error).
		Post(path)

	if err != nil {
		return nil, nil, err

	}

	if response.IsError() {
		return nil, response, fmt.Errorf("error with operation CreateAProfilingRule")
	}

	result := response.Result().(*ResponsePolicyCreateAProfilingRule)
	return result, response, err

}

//ImportProfilingRulesInBulk Import profiling rules in bulk - 70bf-885f-408a-9c74
/* This API imports the given list of profiling rules. For each record, 1) If 'ruleType' for a record is not 'Custom Rule', then it is rejected. 2) If 'ruleId' is provided in the input record,
  2a) Record with same 'ruleId' exists in the system, then it is replaced with new data.
  2b) Record with same 'ruleId' does not exist, then it is inserted in the database.
3) If 'ruleId' is not provided in the input record, then new 'ruleId' is generated by the system, and record is inserted.


*/
func (s *PolicyService) ImportProfilingRulesInBulk(requestPolicyImportProfilingRulesInBulk *RequestPolicyImportProfilingRulesInBulk) (*resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules/bulk"

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetBody(requestPolicyImportProfilingRulesInBulk).
		SetError(&Error).
		Post(path)

	if err != nil {
		return nil, err

	}

	if response.IsError() {
		return response, fmt.Errorf("error with operation ImportProfilingRulesInBulk")
	}

	return response, err

}

//UpdateAnExistingProfilingRule Update an existing profiling rule - c197-6aa2-4fd9-82d7
/* Updates the profiling rule for the given 'ruleId'.


@param ruleID ruleId path parameter. Unique rule identifier

*/
func (s *PolicyService) UpdateAnExistingProfilingRule(ruleID string, requestPolicyUpdateAnExistingProfilingRule *RequestPolicyUpdateAnExistingProfilingRule) (*resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}"
	path = strings.Replace(path, "{ruleId}", fmt.Sprintf("%v", ruleID), -1)

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetBody(requestPolicyUpdateAnExistingProfilingRule).
		SetError(&Error).
		Put(path)

	if err != nil {
		return nil, err

	}

	if response.IsError() {
		return response, fmt.Errorf("error with operation UpdateAnExistingProfilingRule")
	}

	return response, err

}

//DeleteAnExistingProfilingRule Delete an existing profiling rule - 6f9f-98d4-4b0b-9e7c
/* Deletes the profiling rule for the given 'ruleId'.


@param ruleID ruleId path parameter. Unique rule identifier

*/
func (s *PolicyService) DeleteAnExistingProfilingRule(ruleID string) (*resty.Response, error) {
	path := "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}"
	path = strings.Replace(path, "{ruleId}", fmt.Sprintf("%v", ruleID), -1)

	response, err := s.client.R().
		SetHeader("Content-Type", "application/json").
		SetHeader("Accept", "application/json").
		SetError(&Error).
		Delete(path)

	if err != nil {
		return nil, err

	}

	if response.IsError() {
		return response, fmt.Errorf("error with operation DeleteAnExistingProfilingRule")
	}

	return response, err

}
